cell_id,source,execution_count
2,"['#Modules used\n', 'import pandas as pd\n', 'import numpy as np\n', 'import matplotlib.pyplot as plt\n', '%matplotlib inline\n', 'import seaborn as sns\n', 'import sklearn\n', 'from sklearn.cluster import KMeans\n', 'from IPython.display import display']",31.0
3,"['#Reading the csv using pandas\n', ""flowers = pd.read_csv('Iris.csv')\n"", 'flowers.head()']",2.0
5,['flowers.info()'],3.0
6,"[""flowers = flowers.drop(['Id'], axis=1)""]",4.0
7,['flowers.head()'],5.0
8,['flowers.shape'],6.0
9,"[""flowers.Species.replace({'Iris-setosa':0,'Iris-versicolor':1, 'Iris-virginica':2},inplace=True)""]",7.0
10,"['#Checking for any null values\n', 'flowers.isnull().sum()']",8.0
11,"['plt.figure(figsize=(15,10))\n', ""p=sns.heatmap(flowers.corr(), annot=True,cmap='RdYlGn') ""]",9.0
13,"['#independent and dependent variables\n', 'X = flowers.iloc[:,0:4]\n', 'y = flowers.iloc[:,-1]']",29.0
14,"['# Set the size of the plot\n', 'plt.figure(figsize=(14,7))\n', '\n', ""X.columns = ['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width']\n"", ""y.columns = ['Species']\n"", '\n', '# Create a colormap\n', ""colormap = np.array(['red', 'green', 'blue'])\n"", ' \n', '# Plot Sepal\n', 'plt.subplot(1, 2, 1)\n', 'plt.scatter(X.Sepal_Length, X.Sepal_Width, c=colormap[y], s=40)\n', ""plt.title('Sepal')\n"", '\n', '#Plot Petal\n', 'plt.subplot(1, 2, 2)\n', 'plt.scatter(X.Petal_Length, X.Petal_Width, c=colormap[y], s=40)\n', ""plt.title('Petal')""]",28.0
15,"['nclusters = 3 # this is the k in kmeans\n', 'seed = 0\n', '\n', 'km = KMeans(n_clusters=nclusters, random_state=seed)\n', 'km.fit(X)\n', '\n', '# predict the cluster for each data point\n', 'y_cluster_kmeans = km.predict(X)\n', 'y_cluster_kmeans']",34.0
18,"['#The elbow method finds the optimal value for k (#clusters).\n', 'from sklearn import metrics\n', 'score = metrics.silhouette_score(X, y_cluster_kmeans)\n', 'score']",35.0
19,[],
